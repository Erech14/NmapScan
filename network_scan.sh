#!/bin/bash

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
rm -f active_ips.txt open_ports.txt full_os_scan_output.txt os_info.txt device_type.txt active_ips_raw.txt &> /dev/null

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
create_file() {
    [ ! -f "$1" ] && touch "$1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç–∏ IP (–∏—Å–∫–ª—é—á–∞–µ–º .0 –∏ .255)
is_valid_ip() {
    local ip="$1"
    local last_octet=$(echo "$ip" | awk -F '.' '{print $4}')
    if [[ "$last_octet" == "0" || "$last_octet" == "255" ]]; then
        return 1
    fi
    return 0
}

# –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö
echo -n "–í–≤–µ–¥–∏—Ç–µ IP —Å–µ—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 192.168.1.0): " && read network_ip
echo -n "–í–≤–µ–¥–∏—Ç–µ –º–∞—Å–∫—É —Å–µ—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 24): " && read netmask

# –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö IP
echo -e "\nüì° –®–∞–≥ 1: –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö IP-–∞–¥—Ä–µ—Å–æ–≤ –≤ —Å–µ—Ç–∏..."
nmap -sn "$network_ip/$netmask" -oG - | awk '/Up$/{print $2}' > active_ips_raw.txt

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö IP
echo "üö¶ –®–∞–≥ 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö IP..."
> active_ips.txt
while IFS= read -r ip; do
    if is_valid_ip "$ip"; then
        echo "$ip" >> active_ips.txt
    else
        echo "‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ IP: $ip (–Ω–µ–¥–æ–ø—É—Å—Ç–∏–º)"
    fi
done < active_ips_raw.txt

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
create_file os_info.txt
create_file open_ports.txt
create_file device_type.txt
create_file full_os_scan_output.txt

# –ü–æ–¥—Å—á—ë—Ç IP-–∞–¥—Ä–µ—Å–æ–≤
total_ips=$(wc -l < active_ips.txt)
[ "$total_ips" -eq 0 ] && echo "‚ùå –ù–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö IP. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ." && exit 1

echo -e "\nüñ•Ô∏è  –®–∞–≥ 3: –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ IP (–û–°, –ø–æ—Ä—Ç—ã, —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)..."

# –§—É–Ω–∫—Ü–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
draw_progress_bar() {
    local progress=$1
    local total=$2
    local ip=$3
    local bar_length=40
    local filled=$((progress * bar_length / total))
    local empty=$((bar_length - filled))
    local percent=$((progress * 100 / total))

    local bar=""
    for ((i=0; i<filled; i++)); do bar+="="; done
    bar+=">"
    for ((i=0; i<empty; i++)); do bar+="."; done

    echo -ne "\r[${bar}] ${percent}% ($progress/$total) –û–±—Ä–∞–±–æ—Ç–∫–∞ IP: ${ip}   "
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
current_ip=0
while IFS= read -r ip; do
    current_ip=$((current_ip + 1))
    draw_progress_bar "$current_ip" "$total_ips" "$ip"

    os_full_info=$(nmap -O -sT "$ip" 2>/dev/null)

    echo -e "\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –û–° –¥–ª—è IP: $ip" >> full_os_scan_output.txt
    echo "$os_full_info" >> full_os_scan_output.txt
    echo "" >> full_os_scan_output.txt

    os_info=$(echo "$os_full_info" | grep -i "OS details")
    open_ports=$(echo "$os_full_info" | grep -E "^([0-9]+)/(tcp|udp)" | awk '{print $1}' | tr '\n' ',' | sed 's/,$//')
    device_info=$(echo "$os_full_info" | grep -i "Device type")

    [[ -n "$os_info" ]] && echo "$ip: $os_info" >> os_info.txt || echo "$ip: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –û–°" >> os_info.txt
    [[ -n "$open_ports" ]] && echo "$ip: –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã: $open_ports" >> open_ports.txt || echo "$ip: –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤" >> open_ports.txt
    [[ -n "$device_info" ]] && echo "$ip: –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: $device_info" >> device_type.txt || echo "$ip: –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω" >> device_type.txt

done < active_ips.txt

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
echo -e "\n\n‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo -e "üìÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ:\n- active_ips.txt\n- os_info.txt\n- open_ports.txt\n- device_type.txt\n- full_os_scan_output.txt"

